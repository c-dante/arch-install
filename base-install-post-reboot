# Update any packages and the cache
pacman -Syu

# Finish network setup 
# https://wiki.archlinux.org/index.php/Systemd-networkd#Basic_DHCP_network
# https://www.freedesktop.org/software/systemd/man/systemd.network.html
systemctl enable systemd-networkd.service
systemctl start systemd-networkd.service
systemctl enable systemd-resolved.service
systemctl start systemd-resolved.service
rm /etc/resolv.conf
ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf

# @todo: Zeroconf
# pacman -S avahi nss-mdns
# vim /etc/avahi/avahi-daemon.conf
# set use-ipv6 to yes
# vim /etc/nsswitch.conf
# hosts: files mdns_minimal [NOTFOUND=return] dns myhostname
# systemctl enable avahi-daemon.service
# systemctl start avahi-daemon.service

# @todo: secure mount points change fstab
# https://wiki.archlinux.org/index.php/Security#Mount_options
# nodev: Do not interpret character or block special devices on the file system.
# nosuid: Do not allow set-user-identifier or set-group-identifier bits to take effect.
# noexec: Do not allow direct execution of any binaries on the mounted filesystem
# mount /var and /home nodev,nosuid
# mount /boot nodev,nosuid,noexec
# sed -i 's/\/home\s*ext4\s*rw//' /etc/fstab

# create user
echo "enter the username for the admin user"
read USERNAME
useradd -m -G wheel -s /bin/bash $USERNAME
passwd $USERNAME

# @todo: stop brute forcing passwords 10 trys then wait 10 minutes
# edit /etc/pam.d/system-login
# add: auth required pam_tally.so deny=9 unlock_time=600 onerr=succeed file=/var/log/faillog
# comment out: # auth required pam_tally.so onerr=succeed file=/var/log/faillog

# Setup sudo
pacman -S --noconfirm sudo
# only allow wheel to use sudo
echo "%wheel ALL=(ALL) ALL" | (EDITOR="tee -a" visudo)


# @todo: only allow wheel to su
# Edit both /etc/pam.d/su and /etc/pam.d/su-l, then uncomment the line:
# Uncomment the following line to require a user to be in the "wheel" group.
# auth		required	pam_wheel.so use_uid

# disable root login
sudo passwd root -l

# install ssh https://wiki.archlinux.org/index.php/Secure_Shell
pacman -S --noconfirm openssh
# @todo: edit /etc/ssh/sshd_config
# @todo: disable root login
# PermitRootLogin no
# @todo: only those in wheel can login
# AllowGroups wheel
systemctl enable sshd.socket
systemctl start sshd.socket


# @todo: firewall

# setup AUR
#install base-devel tools for building aur packages
pacman -Syu --noconfirm --needed base-devel

# do all the work in /tmp so there's nothing to cleanup
cd /tmp

#install cower
git clone https://aur.archlinux.org/cower.git
cd cower/
vim ~/.gnupg/gpg.conf
# change keyserver to mit key server
gpg --recv-keys 1EB2638FF56C0C53
makepkg -sri
cd ..

#install pacaur
git clone https://aur.archlinux.org/pacaur.git
cd pacaur/
makepkg -sri

# Finish INTEL MICROCODE Install the AUR package `systemd-boot-pacman-hook`
pacaur -Syu systemd-boot-pacman-hook

